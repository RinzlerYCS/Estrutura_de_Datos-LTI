import datetime as dt 
bandera_principal=True
notas_borradas = [9]
fecha_actual = dt.date.today()
numero_folio = 5
notas_taller = {1: ("Vinicius", ["Aire a llantas", "Ajuste de frenos"], dt.date(2023, 8, 29), 400.20),
                2: ("Cerati", ["Cambio de aceite", "Mantenimiento general", "Cambio de batería"], dt.date(2023, 8, 27), 3000.75),
                3: ("Bukowski", ["Cambio de frenos"], dt.date(2023, 6, 20), 1500.0),
                4: ("Lacan", ["Reparación de motor", "Cambio de llantas"], dt.date(2023, 8, 10), 1200.24),
                5: ("Jung", ["Mantenimiento general"], dt.date(2022, 10, 23), 1000.0)}
detalles_precio = []
detalles_service = []
def validar_fecha(fecha):
    try:
        dt.datetime.strptime(fecha, "%d/%m/%Y")
        return True
    except ValueError:
        return False
while bandera_principal:
  print("\n|***********|")
  print("BIENVENIDO A TALLER PITONICO \n")
  try:
        decision_menu = int(input("QUE OPCION DESEA ELEGIR \n \n1-Registrar una nota \n2-Consultas y reportes \n3-Cancelar nota \n4-Recuperar nota \n5-Salir del sistema \n"))
    except ValueError:
        print("Por favor, ingrese un número válido.")
        continue
  if decision_menu ==1:   #DATOS A PEDIR \NOMBRE y \SERVICIO(S), SE CALCULA EL TOTAL A PAGAR
        print(f"ELIGIO LA OPCION DE REGISTRO DE NOTA\n")   ##EL USUARIO DEBE TECLEAR EL NOOMBRE DE LOS SERVICIOS   
        while True:
            nombre_registro=input("Ingrese su nombre: ")       ##Y CAMBIAR LA BUSQUEDA POR ENTEROS
            if nombre_registro.strip()=="":
                print("EL DEBE NO DEBE ESTAR EN BLANCO")
                continue
            else:
                break
        numero_folio+=1
        while True:
            try:
                fecha_registro_nota=input("Ingrese su fecha con el formato (dd/mm/aaaa): ")#SE PIDE LA FECHA DEL USUARIO
                if fecha_registro_nota.strip()=="":
                    print("EL DATO NO DEBE DE OMITIRSE")
                    continue
                fecha_procesada = dt.datetime.strptime(fecha_registro_nota, "%d/%m/%Y").date()
            except ValueError:
                print("El dato ingresado no cumple con el patron (dd/mm/yy)")
                continue
            if fecha_procesada<fecha_actual:            #SE VERIFICA QUE LA FECHA NO SEA ANTERIOR A LA ACTUAL
                print("La fecha que usted ingreso es invalida, su fecha no debe ser anterior a la actual")  
                continue
            else: 
                break
        while True:   #SE PREGUNTARAM LOS SERVICIOS A ELEGIR
            nombre_de_servicio_realizado=input("Ingresa los detalles de la nota: ")       #NO DEBE OMITIRSE
            if nombre_de_servicio_realizado.strip()=="":            #VALIDACION PARA QUE NO SE OMITA
                print("El campo no debe de estar vacio, favor de ingresar de nuevo")
                continue
            while True:    
                try:    
                    precio_detalle_service=float(input("Ingrese el precio del servicio: "))        
                    if precio_detalle_service <=0:
                        print("El precio debe de ser mayor que cero, ingrese de nuevo el valor")
                        continue
                    else: 
                        break
                except ValueError:
                    print("EL DATO QUE DEBE DE SER NUMERICO")
                    continue
            detalles_service.append(nombre_de_servicio_realizado)  #INGRESAN DETALLES TIPO STR
            detalles_precio.append(precio_detalle_service)#INGRESAN EL COSTO X SERVICIO FLOAT
            while True:
                servicio_extra=input("¿Desesa agregar otro servicio? SI/NO: ") 
                if servicio_extra.strip()=="":
                    print("EL DATO NO DEBE DE OMITIRSE")
                    continue
                elif servicio_extra.upper()=="NO":
                    break
                elif servicio_extra.upper()=="SI":
                    break
            
                else:
                    print("DEBE SUMPLIR CON EL PATRON SI/NO")
                    continue
